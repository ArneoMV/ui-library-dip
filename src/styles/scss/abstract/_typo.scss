
@use "../base/mixin.scss" as *;
@use "../base/variable.scss" as *;
@use './color.scss' as *;
// @import './color.scss';

//     Font minimum, preferred and maximum value
//     font-size: clamp(var(--min), var(--val), var(--max));

// Learn more about what's going on here:
// @link https://moderncss.dev/generating-font-size-css-rules-and-creating-a-fluid-type-scale/

// Select a ratio to preview
// Default is "perfectFourth"
$type-ratios: (
  "minorSecond": 1.067,
  "majorSecond": 1.125,
  "minorThird": 1.2,
  "majorThird": 1.25,
  "perfectFourth": 1.333,
  "augmentedFourth": 1.414,
  "perfectFifth": 1.5,
  "goldenRatio": 1.618
);

@function type-ratio($key) {
  @return map-get($type-ratios, $key);
}

// Recommended
$type-base-size: 1rem;

// Select by key of map, or use a custom value
$type-size-ratio: type-ratio("perfectFourth");

// List in descending order to prevent extra sort function
// Limited to high-touch heading styles
$type-levels: 4, 3, 2, 1;

// Create map with h[x] as key
// and computed font-size as value
$type-styles: ();
$level-size: $type-base-size;
@each $level in $type-levels {
  $level-size: $level-size * $type-size-ratio;
  $type-styles: map-merge($type-styles, (#{"h"}$level: $level-size));

  // Output heading styles
  // Assign to element and create utility class
  h#{$level},
  .h#{$level} {
    // Fallback for browsers that don't support min / max
    font-size: $level-size;

    // Recommendation courtesy of this brilliant work:
    // @link https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
    line-height: calc(2px + 2ex + 2px);

    // Set with `em` to be relative to current `font-size`
    //margin-bottom: 0.65em;

    // Limit in place based on testing -> smaller ratios are
    // prematurely or unnecessarily reduced
    @if ($type-size-ratio > 1.2) {
      // Fluid type styles

      // Remove unit for calculations
      $level-unitless: $level-size / ($level-size * 0 + 1);

      // Set minimum size to a percentage less than $level-size
      // Reduction is greater for large font sizes (> 4rem) to help
      // prevent overflow due to font-size on mobile devices
      $fluid-reduction: if($level-size > 4, 0.5, 0.33);
      $fluid-min: $level-unitless - ($fluid-reduction * $level-unitless);

      // Prevent dropping lower than 1rem (body font-size)
      $fluid-min: if($fluid-min > $type-base-size, $fluid-min, 1);

      // Adjust max modifier slightly per level to prevent "same" size
      // or lower levels appaering larger than higher levels
      // 4vw was selected by testing from $type-ratios map, YMMV ðŸ™ƒ
      $fluid-scaler: ($level-unitless - $fluid-min) + 4vw;

      font-size: clamp(
        #{$fluid-min}rem,
        #{$fluid-scaler} + 1rem,
        #{$level-size}
      );
    }
  }
}

@function type-style($key) {
  @return map-get($type-styles, $key);
}





body {
  // Ensure base applied as default for all other elements
  font-size: $type-base-size;
  font-family: "Rubik", sans-serif;
  line-height: 1.5;
  color: $neutral-700;
}

// Test retrieving heading style value from the map
// @debug "h3:" #{type-style(h3)};

p,
li,
h1,
h2,
h3,
h4 {
  // Help prevent overflow of long words/names/URLs
  word-break: break-word;

  // Optional, not supported for all languages:
  hyphens: auto;

  // Clear top margin
  margin-top: 0;
  margin: 0;
  letter-spacing: 1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 500;
  line-height: 32px;
  word-spacing: 0px;
  line-height: inherit;
}

p {
    font-size: 14px;
    line-height: 24px;
    letter-spacing: 0.9px;
    font-weight: 400;
    //padding-top: 1.5px;
    font-weight: 400;
}
.paragraph  {
  &-default {
    color: $neutral-900;
  }
  &-primary {
    color: $primary-500;
  }
  &-success {
    color: $success-400;
  }
  &-warning {
    color: $warning-400;
  }
  &-danger {
    color: $error-400;
  }
  &-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    color: $neutral-600;
  }
  &-mark {
    background-color: #ffd700;
    padding: 2px 4px;
  }
  &-code {
    font-family: monospace;
    background-color: #f5f5f5;
    padding: 2px 4px;
  }
  &-keyboard {
    font-family: monospace;
    background-color: #f5f5f5;
    padding: 2px 4px;
  }
  &-underline {
    text-decoration: underline;
  }
  &-delete {
    text-decoration: line-through;
  }
  &-strong {
    font-weight: 700;
  }
  &-italic {
    font-style: italic;
  }
}


.typo {
  // ... your existing styles ...

  &.caption {
    font-size: 14px;
    font-weight: 500;
    // Add your custom fancy styles here;
    border-radius: 4px;
    padding: 8px 12px;
  }
}

.bold {
  font-weight: bold;
}

.link {
  color: $primary-300;
  text-decoration: underline;
}